import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

file_path = "CAR DETAILS FROM CAR DEKHO.csv"
df = pd.read_csv(file_path)

print(df.head())

missing_values = df.isnull().sum()
print("Missing Values:\n", missing_values)

df['selling_price'] = df['selling_price'].fillna(df['selling_price'].mean())
df['km_driven'] = df['km_driven'].fillna(df['km_driven'].mean())

print(df.describe())

plt.figure(figsize=(12, 6))
sns.histplot(df['year'], bins=20, kde=True, color='blue')
plt.title("Distribution of Car Manufacturing Year")
plt.xlabel("Year")
plt.ylabel("Count")
plt.xticks(rotation=45)
plt.show()

plt.figure(figsize=(12, 6))
sns.scatterplot(x=df["km_driven"], y=df["selling_price"], alpha=0.5, color="purple")
plt.title("Selling Price vs. Kilometers Driven")
plt.xlabel("Kilometers Driven")
plt.ylabel("Selling Price (INR)")
plt.xticks(rotation=45)
plt.show()

X = df[['km_driven']]
y = df['selling_price']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse}")
print(f"R-squared: {r2}")

plt.figure(figsize=(12, 6))
plt.scatter(X_test, y_test, color='blue', label='Actual Price')
plt.scatter(X_test, y_pred, color='red', label='Predicted Price')
plt.title("Actual vs Predicted Selling Price")
plt.xlabel("Kilometers Driven")
plt.ylabel("Selling Price (INR)")
plt.xticks(rotation=45)
plt.legend()
plt.show()